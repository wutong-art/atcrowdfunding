<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">
    <!--配置自动扫描的包:主要是扫描service包-->
    <context:component-scan base-package="com.wtcode.crowd.service"></context:component-scan>

    <!--配置事务管理器-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!--配置事务切面-->
    <aop:config>
        <!--考虑到后边整合SpringSecurity,避免把UserDetailService加入事务控制,让切入点表达式定位到ServiceImpl-->
        <aop:pointcut id="txPointcut" expression="execution(* *..ServiceImpl.*(..))"></aop:pointcut>
        <!--将切入点表达式和事务通知关联起来-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"></aop:advisor>
    </aop:config>
    <!--配置事务通知-->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <!--配置事务的属性-->
        <tx:attributes>
            <!--查询方法配置只读属性,让数据库知道这是一个查询操作，能够进行一定的优化-->
            <tx:method name="get*" read-only="true"></tx:method>
            <tx:method name="find*" read-only="true"></tx:method>
            <tx:method name="query*" read-only="true"></tx:method>
            <tx:method name="count*" read-only="true"></tx:method>
            <!--增删改方法：配置事务的传播行为-->
            <!--REQUIRES默认值，表示当前方法必须工作在事务中，如果当前线程上没有已经开启的事务，则自己开启新事物
            如果已经有了，那么就开启这个已有的事务
                顾虑：用别人的事务有可能“被”回滚
                REQUIRES_NEW:建议使用的值，示当前方法必须工作在事务中，如果当前线程上没有已经开启的事务，则自己开启新事物
                就算是已经有了，也在自己开启的事务中运行
                好处：不会受到其他事务回滚的影响-->
            <!--配置事务属性针对什么样的异常进行回滚
                默认：运行时异常回滚
                建议：编译时异常和运行时异常都回滚-->
            <tx:method name="save*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"></tx:method>
            <tx:method name="update*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"></tx:method>
            <tx:method name="remove*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"></tx:method>
            <tx:method name="batch*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"></tx:method>
        </tx:attributes>

    </tx:advice>

</beans>